<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<!-- NULL을 추가하는 경우 jdbcType을 명시해야 하지만 ""는 명시하지 않아도 됨 -->
	<insert id="insertBoard" parameterType="com.sp.withtail.bbs.Board">
		INSERT INTO bbs(num, userId, subject, content, 
			 hitCount, regDate)
		VALUES (bbs_seq.NEXTVAL, #{userId}, #{subject}, #{content},
			0, SYSDATE)
	</insert>

	<!--
	  * ${} 는 테이블명 이나 컬럼명이 동적일때 테이블명 또는 컬럼명에 사용하고,
	        값부분은 반드시 #{} 로 사용하며,
        #{} 는 ? 로 치환되고 쿼리는 PreparedStatement 객체로 실행한다.
    -->
	<!--
       * INSTR() 함수 대신 LIKE 를 사용하는 경우
          subject LIKE '%' || #{keyword} || '%'
       * CLOB인 경우 검색(LIKE 사용하지 말것)
          DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 
	-->	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'regDate' ">
			   ( TO_CHAR(regDate, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(regDate, 'YYYY-MM-DD') = #{keyword} )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>

	<!-- 글개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>   
	</select>

	<!-- 글리스트 -->
	<select id="listBoard" parameterType="map" resultType="com.sp.withtail.bbs.Board">
		SELECT b.num, b.userId, userName, subject, 
			   TO_CHAR(b.regDate, 'YYYY-MM-DD') regDate,
			   hitCount, nickname,
			   NVL(replyCount, 0) replyCount
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) replyCount FROM bbsReply
			WHERE preNum = 0
			GROUP BY num
		) c ON b.num = c.num
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

	<!-- 글보기 -->
	<select id="readBoard" parameterType="Long" resultType="com.sp.withtail.bbs.Board">
		SELECT b.num, b.userId, userName, subject, content,
			   hitCount, b.regDate,nickname,
			   NVL(boardLikeCount, 0) boardLikeCount
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) boardLikeCount FROM bbsLike
			GROUP BY num
		) bc ON b.num = bc.num
		WHERE b.num = #{num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Long">
		UPDATE bbs SET hitCount=hitCount+1 WHERE num = #{num}
	</update>
	
	<!-- AND 가 필요 없는 경우 자동으로 제거 됨 -->
	<!-- 이전글 -->
	<select id="preReadBoard" parameterType="map" resultType="com.sp.withtail.bbs.Board">
		SELECT b.num, subject
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (b.num &gt; #{num})
		</where>
		ORDER BY b.num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 다음글 -->
	<select id="nextReadBoard" parameterType="map" resultType="com.sp.withtail.bbs.Board">
		SELECT b.num, subject
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (b.num &lt; #{num})
		</where>
		ORDER BY b.num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 수정 -->
	<update id="updateBoard" parameterType="com.sp.withtail.bbs.Board">
		UPDATE bbs SET subject=#{subject}, content=#{content}
		WHERE num = #{num}
	</update>
      
	<!-- 삭제 -->
	<delete id="deleteBoard" parameterType="Long">
		DELETE FROM bbs WHERE num = #{num}
	</delete>
      
	<!-- 게시 글 좋아요 추가 -->
	<insert id="insertBoardLike" parameterType="map">
		INSERT INTO bbsLike(num, userId) VALUES (#{num}, #{userId})
	</insert>

	<!-- 게시 글 좋아요 삭제 -->
	<delete id="deleteBoardLike" parameterType="map">
		DELETE FROM bbsLike WHERE num = #{num} AND userId = #{userId}
	</delete>
      
	<!-- 게시글 좋아요 개수 -->
	<select id="boardLikeCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM bbsLike WHERE num=#{num}
	</select>

	<!-- 게시글 좋아요 여부 -->
	<select id="userBoardLiked" parameterType="map" resultType="com.sp.withtail.bbs.Board">
		SELECT num, userId FROM bbsLike WHERE num = #{num} AND userId = #{userId}
	</select>
      
	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.sp.withtail.bbs.Reply">
		INSERT INTO bbsReply(replyNum, num, userId, content, preNum, regDate)
		VALUES (bbsReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{preNum}, SYSDATE)
	</insert>

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM bbsReply
		WHERE num=#{num} AND preNum=0

	</select>

	<!-- 댓글리스트 -->
	<select id="listReply" parameterType="map" resultType="com.sp.withtail.bbs.Reply">
		SELECT r.replyNum, r.userId, userName, r.num, content, r.regDate,
			   NVL(answerCount, 0) answerCount, nickname
		FROM bbsReply r
		JOIN member1 m ON r.userId = m.userId
		LEFT OUTER JOIN (
			SELECT preNum, COUNT(*) answerCount
			FROM bbsReply
			WHERE preNum!=0
			GROUP BY preNum
		) a ON r.replyNum = a.preNum
		WHERE r.num=#{num} AND r.preNum=0
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM bbsReply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR preNum=#{replyNum}
		</if>
	</delete>
	
	<!-- 댓글의 답글 리스트 -->
	<select id="listReplyAnswer" parameterType="map" resultType="com.sp.withtail.bbs.Reply">
		SELECT replyNum, r.num, r.userId, userName, content, r.regDate, preNum, nickname
		FROM bbsReply r
		JOIN member1 m ON r.userId = m.userId
		WHERE preNum = #{preNum}
		ORDER BY replyNum DESC
	</select>
	
	<!-- 댓글의 답글 개수 -->
	<select id="replyAnswerCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM bbsReply
		WHERE preNum = #{preNum}
	</select>
	
</mapper>